//9.30. Саставити рекурзивну функцију која степеновање целог броја на целобројни изложилац, а
//затим тестирати функцију за дати природни број и изложилац и исписати добијени резултат.
// function Steponovanje(broj, stepen) {
//   if (stepen === 0) return true;
//   return broj * Steponovanje(broj, stepen - 1);
// }

// console.log(Steponovanje(5, 3));

///9.31. Саставити рекурзивну функцију која врши сабирање првих n бројева, а затим тестирати
//функцију за дато n и исписати добијени резултат.

// function Sabiranje(n) {
//   console.log(n);
//   if (n === 0) return true;
//   return n + Sabiranje(n - 1);
// }
// console.log(Sabiranje(5));

//9,32,......Саставити рекурзивну функцију која исписује првих n бројева у обрнутом редолседу, а затим
//тестирати функцију за дато n.

// function oduzimanje(n) {
//   if (n === 0) return false;
//   console.log(n);
//   return oduzimanje(n - 1);
// }

// console.log(oduzimanje(8));

// 9.34.Саставити рекурзивну функцију која сабира декадне цифре целог броја. Затим тестирати
// //функцију у главном програму за унети цео број и исписати добијени резултат.

// function sumaCifara(n) {
//   if (n === 0) return false;
//   return (n % 10) + sumaCifara(Math.floor(n / 10));
// }
// console.log(sumaCifara(222));

//9.35. Саставити рекурзивну функцију која одређује и исписује n-ти члан Фибоначијевог низа, а
//затим тестирати функцију за дато n. Фибоначијев низ: f1=1, f2=1, fi=fi-1+fi-2, i=3, 4, 5, ...
